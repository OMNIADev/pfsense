#!/bin/sh
#
# rc.initial
#
# part of pfSense (https://www.pfsense.org)
# Copyright (c) 2004-2016 Rubicon Communications, LLC (Netgate)
# All rights reserved.
#
# originally based on m0n0wall (http://neon1.net/m0n0wall)
# Copyright (c) 2003-2004 Manuel Kasper <mk@neon1.net>.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# make sure the user can't kill us by pressing Ctrl-C,
# ctrl-z, etc.
trap : 2
trap : 3
trap : 4

if [ -f /etc/rc.local ]; then
	RCLOCALPWD=`ps awux | grep rc.local | grep -v grep | awk '{ print $2 }'`
	if [ "$RCLOCALPWD" = "" ]; then
		echo ">>> Launching rc.local in background..."
		sh /etc/rc.local &
		sleep 1
		sh /etc/rc.local.running &
	else
		if [ -f /etc/rc.local.running ]; then
			echo ">>> Launching rc.local.running in background..."
			sh /etc/rc.local.running &
		fi
	fi
fi

# Parse command line parameters
while [ $# -gt 0 ]; do
	case $1 in
		-c )	shift
			/bin/sh -c $1
			exit
			;;
		* )
	esac
	shift
done

CONFIG="/cf/conf/config.xml"
WORD="https"

# endless loop
while : ; do

if [ -f /tmp/ttybug ]; then
	rm /tmp/ttybug
	exit && exit && logout
fi

/etc/rc.banner

# Read product_name from $g, defaults to pfSense
product=$(/usr/local/sbin/read_global_var product_name pfSense)

# Check to see if SSH is running.
#if pgrep -q -a -F /var/run/sshd.pid sshd >/dev/null 2>&1; then
#	sshd_option="14) Disable Secure Shell (sshd)";
#else
#	sshd_option="14) Enable Secure Shell (sshd)";
#fi

#for i in /var/db/pfi/capable_*; do
#	if [ -f $i -a ! -L /cf/conf ]; then
#		option98="98) Move configuration file to removable device"
#		break
#	fi
#done
isCPActived=$(/usr/local/www/iwip/services/captive_portal_status)

cpMsg="Turn off Captive Portal"
if [ $isCPActived -lt 1 ]; then
	cpMsg="Turn on Captive Portal"
fi


# display a cheap menu
echo ""
echo " 0) Logout (SSH only)"
echo " 1) Assign Interfaces"
echo " 2) Set Interface(s) IP address"
echo " 3) IWIP Test"
echo " 4) Ping host"
echo " 5) Reboot system"
echo " 6) Halt system"
echo " 8) Shell"
echo "11)" cpMsg

echo
read -p "Enter an option: " opmode
echo

# see what the user has chosen
case ${opmode} in
0)
	exit && exit && logout
	;;
1)
	/etc/rc.initial.setports
	;;
2)
	/etc/rc.initial.setlanip
	;;
3)
	#echo "IWIP Test"
	iwip-cli test
	read -p "Press a key to continue..." pause
	clear
	;;
4)
	/etc/rc.initial.ping
	;;
5)
	/etc/rc.initial.reboot
	;;
6)
	/etc/rc.initial.halt
	;;
8)
	/bin/tcsh
	;;
11)
	if [ $isCPActived -lt 1 ]; then
		/usr/local/www/iwip/services/captiveportal_restore
	else
		/usr/local/www/iwip/services/captiveportal_panic
	fi
	;;

esac

done
